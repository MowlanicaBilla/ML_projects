"""
Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

You must write an algorithm that runs in O(n) time and without using the division operation.

 

Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]
"""
# Explanation:
# One way to solve this is multiply the entire list and divide by it's index value
# or
# Iterating each value and multiplying the values before and after that index except that number itself.


# In this, we are using the second method


def product_of_array(nums):
    output = [1]
    # Iterating the list in reverse order
    for i in range(len(nums)-1, 0, -1):
        output.append(output[-1]*nums[i])
    # Reversing the list
    output = output[::-1]
    # For the numbers in the left, iterating and multiplying with other numbers
    left = 1
    for i in range(len(nums)):
        output[i] = output[i]*left
        left *= nums[i]
    return output

print(product_of_array(nums=[1,2,3,4]))